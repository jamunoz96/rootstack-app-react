{"version":3,"sources":["redux/reducers/authReducer.tsx","redux/reducers/jobReducer.tsx","redux/reducers/mapReducer.tsx","redux/reducers/rootReducer.tsx","redux/store.tsx","services/api/config.tsx","services/api/index.tsx","redux/actions/authActions.tsx","services/auth/auth.tsx","redux/utils/globalDispatch.tsx","components/commons/Navbar.tsx","redux/actions/jobActions.tsx","services/jobs/job.tsx","redux/actions/mapActions.tsx","components/Jobs/JobList.tsx","components/Jobs/JobStats.tsx","components/Map/Map.tsx","components/Jobs/Jobs.tsx","views/Home/Home.tsx","routes/middlewares/AuthRoute.tsx","routes/middlewares/Authenticated.tsx","views/Login/Login.tsx","routes/Routes.tsx","App.tsx","index.tsx"],"names":["LOADING","LOGIN","LOGOUT","GET_USER","REQUEST_ERROR","token","localStorage","getItem","initialState","user","JSON","parse","getUser","isAuthed","errorMessage","isLoading","AuthReducer","state","action","type","setItem","payload","stringify","removeItem","error","GET_JOBS","current_page","current","parseInt","getCurrentPage","data","last_page","total","JobReducer","CENTER_MAP","zoom","center","lat","lng","MapReducer","rootReducer","combineReducers","auth","authReducer","job","jobReducer","map","mapReducer","store","createStore","compose","composeWithDevTools","applyMiddleware","thunk","config","api_url","axios","create","baseURL","headers","Authorization","_LOADING","_REQUEST_ERROR","loginAction","email","password","dispatch","userData","API","post","then","res","access_token","catch","getUserAction","getState","get","apiGetUser","_USER","logoutAction","globalDispatch","NavbarAuth","useSelector","className","width","alt","src","name","onClick","_jobs","_requestError","getJobsAction","apiGetJobs","nextJobsAction","nextPage","apiNextJobs","backJobsAction","backPage","apiBackJobs","currentJobsAction","apiCurrentJobs","centerMap","_CENTER_MAP","JobList","index","id","image","height","title","status","date","assigned_to","description","parseFloat","latitude","longitude","handleShowInMap","length","JobStats","Map","withScriptjs","withGoogleMap","useState","currentJob","setCurrentJob","currentZoom","setCurrentZoom","currentCenter","setCurrentCenter","useEffect","onCenterChanged","jobElement","document","getElementById","classList","remove","handleCenterChange","marker","position","add","scrollIntoView","handleMarker","Jobs","googleMapURL","loadingElement","style","containerElement","mapElement","Home","Navbar","React","memo","AuthRoute","Component","component","rest","render","props","to","Authenticated","Login","initialValues","username","validationSchema","Yup","shape","required","onSubmit","formValue","disabled","role","Routes","exact","path","App","ReactDOM"],"mappings":"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","file":"static/js/main.5a0cf1ec.chunk.js","sourcesContent":["import AuthStore from \"../types/AuthStore\";\n\nexport const LOADING = 'auth/LOADING';\nexport const LOGIN = 'auth/LOGIN';\nexport const LOGOUT = 'auth/LOGOUT';\nexport const GET_USER = 'auth/GET_USER';\nexport const REQUEST_ERROR = 'auth/REQUEST_ERROR';\n\nconst token : string | null = localStorage.getItem(\"auth_token\") || null;\nconst getUser = () : object | null => {\n  const user : string | null = localStorage.getItem(\"auth_user\");\n  if(user) return JSON.parse(user);\n  else return null;\n};\n\nconst initialState : AuthStore = {\n  user: getUser(),\n  token: token,\n  isAuthed: token ? true : false,\n  errorMessage: null,\n  isLoading: false\n};\n\nconst AuthReducer = (state = initialState, action: any) => {\n  switch (action.type) {\n    case LOADING:\n      return {\n        ...state,\n        isLoading: true\n      }\n    case LOGIN:\n      localStorage.setItem(\"auth_token\", action.payload.token);\n        return {\n          ...state,\n          isAuthed: true,\n          token: action.payload.token,\n          user: null,\n          errorMessage: null,\n          isLoading: false\n        };\n    case GET_USER:\n      localStorage.setItem(\"auth_user\", JSON.stringify(action.payload.user));\n      return {\n        ...state,\n        user: action.payload.user,\n        isLoading: false\n      };\n    case LOGOUT:\n      localStorage.removeItem(\"auth_token\");\n      localStorage.removeItem(\"auth_user\");\n      return {\n        ...state,\n        isAuthed: false,\n        token: null,\n        user: null,\n        errorMessage: null,\n        isLoading: false\n      };\n    case REQUEST_ERROR:\n      return {\n        ...state,\n        errorMessage: action.payload.error,\n        isLoading: false\n      };\n    default:\n      return state;\n  }\n};\n\nexport default AuthReducer;\n","import JobStore from \"../types/JobStore\";\n\nexport const GET_JOBS = 'auth/GET_JOBS';\nexport const REQUEST_ERROR = 'auth/REQUEST_ERROR';\n\nconst getCurrentPage = () : number => {\n  const current = localStorage.getItem(\"current_page_jobs\");\n  if(current) return parseInt(current);\n  else return 1;\n}\n\nconst initialState : JobStore  = {\n  current_page: getCurrentPage(),\n  data: [],\n  last_page: 0,\n  total: 0\n};\n\nconst JobReducer = (state = initialState, action: any) => {\n  switch (action.type) {\n    case GET_JOBS:\n      localStorage.setItem(\"current_page_jobs\", JSON.stringify(action.payload.current_page));\n      return {\n        ...state,\n        current_page: action.payload.current_page,\n        data: action.payload.data,\n        last_page: action.payload.last_page,\n        total: action.payload.total\n      };\n    case REQUEST_ERROR:\n      return {\n        ...state,\n        errorMessage: action.payload.error\n      };\n    default:\n      return state;\n  }\n};\n\nexport default JobReducer;\n","\nexport const CENTER_MAP = 'map/CENTER_MAP';\n\nconst initialState  = {\n  zoom: 2,\n  center: {lat: 0, lng: 0}\n};\n\nconst MapReducer = (state = initialState, action: any) => {\n  switch (action.type) {\n    case CENTER_MAP:\n      return {\n        ...state,\n        zoom: action.payload.zoom,\n        center: action.payload.center\n      };\n    default:\n      return state;\n  }\n};\n\nexport default MapReducer;\n","import { combineReducers } from 'redux';\nimport authReducer from './authReducer';\nimport jobReducer from './jobReducer';\nimport mapReducer from './mapReducer';\n\nconst rootReducer = combineReducers({ \n    auth: authReducer,\n    job: jobReducer,\n    map: mapReducer,\n})\n\nexport default rootReducer;","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers/rootReducer';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nexport const store = createStore(rootReducer, \n    compose(composeWithDevTools(applyMiddleware(thunk))));","const config = {\n    api_url: 'https://coding-test.rootstack.net/api'\n};\n  \nexport default config;\n","import axios from 'axios';\nimport config from './config';\n\nfunction getToken() {\n  return localStorage.getItem('auth_token');\n}\n\nexport default axios.create({\n  baseURL: config.api_url,\n  headers: {\n    Authorization: `Bearer ${getToken()}`\n  }\n});\n","import { apiGetUser, apiLogin } from '../../services/auth/auth';\nimport { GET_USER, LOADING, LOGIN, LOGOUT, REQUEST_ERROR } from '../reducers/authReducer';\n\nconst _LOGIN = (token: string ) => ({\n    type: LOGIN,\n    payload: {\n        token\n    }\n});\n\nconst _USER = (user: object ) => ({\n    type: GET_USER,\n    payload: {\n        user\n    }\n});\n\nconst _LOGOUT = () => ({\n    type: LOGOUT\n});\n\nconst _LOADING = () => ({\n    type: LOADING\n});\n\nconst _REQUEST_ERROR = (error: any) => ({\n    type: REQUEST_ERROR,\n    payload: {\n        error\n    }\n});\n\nexport const loginAction = (email: string, password: string) => (dispatch: any) => {\n    dispatch(_LOADING());\n    apiLogin({ email, password })\n        .then(res => dispatch(_LOGIN(res.data.access_token)))\n        .catch(error => dispatch(_REQUEST_ERROR(error)));\n};\n\nexport const getUserAction = () => (dispatch: any, getState: any) => {\n    const { user } = getState().auth;\n    if(!user){\n        dispatch(_LOADING());\n        apiGetUser()\n            .then(res => dispatch(_USER(res.data)))\n            .catch(error => dispatch(_REQUEST_ERROR(error)));\n      \n    } \n};\n\nexport const logoutAction = () => (dispatch: any) => {\n    dispatch(_LOGOUT());\n};","import API from '../api';\n\nexport const apiLogin = (userData: any) => API.post('/auth/login', userData);\nexport const apiGetUser = () => {\n    const token = localStorage.getItem('auth_token')\n    return API.get(\"/auth/me\", {\n        headers: {\n            Authorization: `Bearer ${token}`\n        }\n    });\n}\n","import { store } from \"../store\";\n\nconst { dispatch } = store;\nexport const globalDispatch = (action: any) => dispatch(action);","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { logoutAction } from \"../../redux/actions/authActions\";\nimport { globalDispatch } from \"../../redux/utils/globalDispatch\";\n\nconst NavbarAuth = () => {\n    const { user } = useSelector((state: any) => state.auth);\n    const handleClose = () => globalDispatch(logoutAction());\n    return <>\n        <nav className=\"navbar navbar-light bg-light\">\n            <div className=\"container-fluid\">\n                <img  width=\"150\" alt=\"\" src=\"https://pbs.twimg.com/media/DdL7vaFWkAAmSRy?format=png&name=large\" />\n                <div className=\"d-flex\">\n                    <h4 className=\"pt-2\">{user.name}</h4>\n                    <button type=\"button\" onClick={handleClose} className=\"btn btn-danger ms-5\">Close</button>\n                </div>\n            </div>\n        </nav>\n    </>;\n}\n\nexport default NavbarAuth;","import { apiBackJobs, apiCurrentJobs, apiGetJobs, apiNextJobs } from '../../services/jobs/job';\nimport JobStore from '../types/JobStore';\nimport { GET_JOBS, REQUEST_ERROR } from '../reducers/jobReducer';\n\nconst _jobs = (current_page : number, data: [], last_page: number, total : number ) => ({\n    type: GET_JOBS,\n    payload: {\n        current_page,\n        data,\n        last_page,\n        total\n    }\n});\n\nconst _requestError = (error: any) => ({\n    type: REQUEST_ERROR,\n    payload: {\n        error\n    }\n});\n\nexport const getJobsAction = () => (dispatch: any) => {\n    apiGetJobs()\n        .then(res => {\n            const {current_page, data, last_page, total} = res.data;\n            dispatch(_jobs(current_page, data, last_page, total));\n        })\n        .catch(error => dispatch(_requestError(error)));\n};\n\nexport const nextJobsAction = () => (dispatch: any, getState : any) => {\n    const job : JobStore = getState().job;\n    apiNextJobs(job.current_page)\n        .then(res => {\n            const {current_page, data, last_page, total} = res.data;\n            dispatch(_jobs(current_page, data, last_page, total));\n        })\n        .catch(error => dispatch(_requestError(error)));\n};\n\nexport const backJobsAction = () => (dispatch: any, getState : any) => {\n    const job : JobStore = getState().job;\n    apiBackJobs(job.current_page)\n        .then(res => {\n            const {current_page, data, last_page, total} = res.data;\n            dispatch(_jobs(current_page, data, last_page, total));\n        })\n        .catch(error => dispatch(_requestError(error)));\n};\n\nexport const currentJobsAction = () => (dispatch: any, getState : any) => {\n    const job : JobStore = getState().job;\n    apiCurrentJobs(job.current_page)\n        .then(res => {\n            const {current_page, data, last_page, total} = res.data;\n            dispatch(_jobs(current_page, data, last_page, total));\n        })\n        .catch(error => dispatch(_requestError(error)));\n};","import API from '../api';\n\nexport const apiGetJobs = () => {\n    const token = localStorage.getItem('auth_token');\n    return API.get(`/jobs?page=1`,{\n        headers: {\n            Authorization: `Bearer ${token}`\n        }\n    });\n}\n\nexport const apiNextJobs = (nextPage : number) => {\n    const token = localStorage.getItem('auth_token');\n    return API.get(`/jobs?page=${nextPage+1}`, {\n        headers: {\n            Authorization: `Bearer ${token}`\n        }\n    })\n}\n\nexport const apiBackJobs = (backPage : number) => {\n    const token = localStorage.getItem('auth_token');\n    return API.get(`/jobs?page=${backPage-1}`, {\n        headers: {\n            Authorization: `Bearer ${token}`\n        }\n    })\n}\n\nexport const apiCurrentJobs = (nextPage : number) => {\n    const token = localStorage.getItem('auth_token');\n    return API.get(`/jobs?page=${nextPage}`, {\n        headers: {\n            Authorization: `Bearer ${token}`\n        }\n    })\n}","import { CENTER_MAP } from \"../reducers/mapReducer\"\n\nconst _CENTER_MAP = (zoom: number, center: {lat: number, lng: number}) => ({\n    type: CENTER_MAP,\n    payload: {\n        zoom,\n        center\n    }\n})\n\nexport const centerMap = (zoom : number, center : {lat: number, lng: number}) => (dispatch : any) => {\n    dispatch(_CENTER_MAP(zoom, center));\n}","import { useSelector } from \"react-redux\";\nimport { centerMap } from \"../../redux/actions/mapActions\";\nimport { globalDispatch } from \"../../redux/utils/globalDispatch\";\n\nconst JobList = () => {\n    const { data } = useSelector((state: any) => state.job);\n    const handleShowInMap = (job: any) => globalDispatch(centerMap(12, { lat: parseFloat(job.latitude), lng: parseFloat(job.longitude) }));\n    return <>\n            <div className=\"c-container-jobs\">\n        <div className=\"row\">\n                {data.map((job: any, index: number) => {\n                    return (\n                        <div className=\"col-md-6\" key={job.id} id={`job-card-${job.id}`}>\n                            <div className=\"card c-card\" >\n                                <img src={job.image} height=\"200\" className=\"card-img-top\" alt=\"...\" />\n                                <div className=\"card-body\">\n                                    <h5 className=\"card-title\">{job.title}</h5>\n                                    <span>Status: <span className=\"badge bg-info text-dark\">{job.status}</span></span> <br />\n                                    <span>Date: <span className=\"badge bg-warning text-dark\">{job.date}</span></span> <br />\n                                    <span>Assigned to: <span className=\"badge bg-dark\">{job.assigned_to}</span></span> <br />\n                                    <br />\n                                    <p className=\"card-text\">{job.description}</p>\n                                    <button onClick={() => handleShowInMap(job)} type=\"button\" className=\"btn btn-outline-warning\">Show in map</button>\n                                </div>\n                            </div>\n                        </div>\n                    );\n                })\n                }\n                {\n                    !data.length ? <div>0 Jobs</div> : \"\"\n                }\n            </div>\n        </div>\n    </>;\n}\n\nexport default JobList;","import { useSelector } from \"react-redux\";\n\nexport const JobStats = () => {\n    const { total } = useSelector((state: any) => state.job);\n    return <h5 className=\"pt-3\"><span className=\"alert alert-info\"># Jobs : { total || 0}</span></h5>\n}\n\nexport default JobStats;","import React, { useEffect, useState } from 'react'\nimport { GoogleMap, Marker, withGoogleMap, withScriptjs } from \"react-google-maps\"\nimport { useSelector } from 'react-redux';\n\nconst Map = withScriptjs(withGoogleMap(() => {\n  const [currentJob, setCurrentJob] = useState(0);\n  const [currentZoom, setCurrentZoom] = useState(2);\n  const [currentCenter, setCurrentCenter] = useState({lat: 0, lng: 0});\n  const { job:{ data }, map } = useSelector((state: any) => state);\n\n  const handleMarker = (job : any) => {\n    const jobElement = document.getElementById(`job-card-${job.id}`);\n    if(jobElement){\n      setCurrentJob(job.id);\n      jobElement.classList.add(\"card-border\");\n      jobElement.scrollIntoView();\n    }\n  }\n\n  useEffect(() => {\n    setCurrentZoom(map.zoom);\n    setCurrentCenter(map.center);\n  }, [map])\n\n  const handleCenterChange = () => {\n    const jobElement = document.getElementById(`job-card-${currentJob}`);\n    if(jobElement) {\n      jobElement.classList.remove(\"card-border\");\n      setCurrentZoom(2);\n    }\n  }\n\n  return (\n    <GoogleMap\n      zoom={currentZoom}\n      onCenterChanged={() => handleCenterChange()}\n      center={currentCenter} >\n      \n      { data.map((marker : any) => {\n        return <Marker key={marker.id}\n                  position={{ lat: parseFloat(marker.latitude), lng: parseFloat(marker.longitude) }}\n                  onClick={() => handleMarker(marker)} />\n        })\n      }\n\n    </GoogleMap>\n  )\n\n}));\n\nexport default Map;","import { useSelector } from \"react-redux\";\nimport React, { useEffect } from \"react\";\nimport { backJobsAction, currentJobsAction, getJobsAction, nextJobsAction } from \"../../redux/actions/jobActions\";\nimport { globalDispatch } from \"../../redux/utils/globalDispatch\";\nimport JobList from \"./JobList\";\nimport JobStats from \"./JobStats\";\nimport Map from \"../Map/Map\";\nimport \"./jobs.scss\"\n\nconst Jobs = () => {\n\n    const {current_page, last_page} = useSelector((state : any) => state.job);\n    useEffect(() => {\n        if(current_page === 1) globalDispatch(getJobsAction());\n        else if (current_page > 1) globalDispatch(currentJobsAction());\n        // eslint-disable-next-line\n    }, []);\n\n    const handleNextPage = () => globalDispatch(nextJobsAction());\n    const handleBackPage = () => globalDispatch(backJobsAction());\n\n    return <>\n        <div className=\"mt-4 mb-4\">\n            <div className=\"row\">\n                <div className=\"col-md-7\">\n                    <div className=\"row mb-3\">\n                        <div className=\"col-md-9\">\n                            <h1><b>Job List</b></h1>\n                        </div>\n                        <div className=\"col-md-3\">\n                            <JobStats />\n                        </div>\n                    </div>\n                    <JobList />\n                    <div className=\"d-grid gap-2 d-md-flex justify-content-md-end mt-3\">\n                        {\n                            current_page === 1 ? \"\" :\n                            <button onClick={handleBackPage} className=\"btn btn-dark me-md-2\" type=\"button\">Back</button>\n                        }\n                        {\n                            last_page === current_page ? \"\" :\n                            <button onClick={handleNextPage} className=\"btn btn-dark\" type=\"button\">Next</button>\n                        }\n                    </div>\n                </div>\n                <div className=\"col-md-5\">\n                    <Map \n                        googleMapURL=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyB2NvJQg_BTuL3ziQ1733izl0NjyjRJyWE&v=3.exp&libraries=geometry,drawing,places\"\n                        loadingElement={<div style={{ height: `100%` }} />}\n                        containerElement={<div style={{ height: `700px` }} />}\n                        mapElement={<div style={{ height: `100%` }} />} />\n                </div>\n            </div>\n        </div>\n    </>;\n}\n\nexport default Jobs;","import React from \"react\";\nimport NavbarAuth from \"../../components/commons/Navbar\";\nimport Jobs from \"../../components/Jobs/Jobs\";\n\nconst Home = () => {\n    return <>\n        <NavbarAuth />\n        <Jobs />\n    </>\n}\n\nexport default React.memo(Home);","import { Redirect, Route } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport AuthStore from \"../../redux/types/AuthStore\";\n\nconst AuthRoute = ({ component: Component, ...rest } : any) => {\n    const {token, user} : AuthStore = useSelector((state: any) => state.auth);\n    return (\n        <Route {...rest} render={ props =>\n                token && user ? (\n                    <Component {...props} />\n                ) : (\n                    <Redirect to=\"/login\" />\n                )\n            }\n        />\n    );\n}\n\nexport default AuthRoute;","import { Redirect, Route } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport AuthStore from \"../../redux/types/AuthStore\";\n\nconst Authenticated = ({ component: Component, ...rest } : any) => {\n    const {token, user} : AuthStore = useSelector((state: any) => state.auth);\n    return (\n        <Route {...rest}\n            render={props =>\n                token && user ? (\n                    <Redirect to=\"/\" />\n                ) : (\n                    <Component {...props} />\n                )\n            }\n        />\n    );\n}\n\nexport default Authenticated;","import { Formik, Field, Form, ErrorMessage } from \"formik\";\nimport { useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport * as Yup from \"yup\";\nimport { getUserAction, loginAction } from \"../../redux/actions/authActions\";\nimport AuthStore from \"../../redux/types/AuthStore\";\nimport { globalDispatch } from \"../../redux/utils/globalDispatch\";\n\nconst Login = () => {\n    const {token, isLoading, errorMessage} : AuthStore = useSelector((state: any) => state.auth);\n\n    useEffect(() => {\n        if(token) globalDispatch(getUserAction());\n    }, [token]);\n\n    const handleValidation = () => {\n        return Yup.object().shape({\n            username: Yup.string().required(\"This field is required!\"),\n            password: Yup.string().required(\"This field is required!\"),\n        });\n    }\n\n    const handleLogin = (formValue: { username: string; password: string }) => {\n        const { username, password } = formValue;\n        globalDispatch(loginAction(username, password));\n    }\n\n    const initialValues = {\n        username: \"tvandervort@example.net\",\n        password: \"password\"\n    };\n\n    return (\n        <div className=\"col-md-12\">\n            <div className=\"card card-container\">\n                <img src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\n                    alt=\"profile-img\"\n                    className=\"profile-img-card\" />\n\n                <Formik initialValues={initialValues}\n                    validationSchema={handleValidation}\n                    onSubmit={handleLogin}>\n\n                    <Form>\n                        <div className=\"form-group\">\n                            <label>Username</label>\n                            <Field name=\"username\" type=\"text\" className=\"form-control\" />\n                            <ErrorMessage\n                                name=\"username\"\n                                component=\"div\"\n                                className=\"badge bg-warning text-dark\" />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label>Password</label>\n                            <Field name=\"password\" type=\"password\" className=\"form-control\" />\n                            <ErrorMessage\n                                name=\"password\"\n                                component=\"div\"\n                                className=\"badge bg-warning text-dark\" />\n                        </div>\n\n                        <div className=\"d-grid gap-2 mt-3\">\n                            <button type=\"submit\" className=\"btn btn-primary\" disabled={isLoading}>\n                                {isLoading && (\n                                    <span className=\"me-2 spinner-border spinner-border-sm\"></span>\n                                )}\n                                <span>Login</span>\n                            </button>\n                        </div>\n\n                        {errorMessage && (\n                            <div className=\"form-group\">\n                                <div className=\"alert alert-danger\" role=\"alert\">\n                                    {errorMessage}\n                                </div>\n                            </div>\n                        )}\n                    </Form>\n                </Formik>\n            </div>\n        </div>\n    );\n}\n\nexport default Login;","import React from 'react'\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport Home from '../views/Home/Home'\nimport AuthRoute from './middlewares/AuthRoute'\nimport Authenticated from './middlewares/Authenticated'\nimport Login from '../views/Login/Login'\n\nconst Routes = () => {\n    return (\n        <div className=\"container mt-3\">\n          <Switch>\n            <AuthRoute exact path=\"/\" component={Home} />\n            <Authenticated path=\"/login\" component={Login} />\n            <Route>\n              <Redirect to=\"/login\" />\n            </Route>\n          </Switch>\n        </div>\n    );\n}\n\nexport default Routes;\n","import React from \"react\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { store } from \"./redux/store\";\nimport Routes from './routes/Routes'\n\nconst App = () => {\n  return (\n    <Provider store = { store }>\n      <BrowserRouter>\n        <Routes />\n      </BrowserRouter>\n    </Provider>\n  )\n}\n\nexport default App;","import ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.scss';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <App/>,\n  document.getElementById('root')\n);"],"sourceRoot":""}